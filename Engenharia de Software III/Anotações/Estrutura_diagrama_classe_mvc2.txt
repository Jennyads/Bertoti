class ControllerTrial implements controllerInterface{

	View view;
	Subject model;
	
	+ControllerTrial(Subject mo){}
	
	+void assinar(){}
	
	+void cancelar(){}
	
}

interface controllerInterface {
	
	+void assinar();
	+void cancelar();
}


class Controller implements controllerInterface{

	View view;
	Subject model;
	
	+Controller(Subject mo){}
	
	+void assinar(){}
	
	+void cancelar(){}
	
}

class Model implements Subject {
	-static Model instance;
	-ArrayList<Observer> observers;
	-String nome;
	-String especialidade;
	-String horario;
	-Model(){}

	+static synchronized Model getInstance() {}

	+void registerObserver(Observer o) {}

	+void removeObserver(Observer o) {}

	+void notifyObservers() {}

	+void measurementsChanged() {}

	+void setMeasurements(String nome, String especialidade, String horario) {}

	+String getNome() {}

	+String getEspecialidade() {}

	+String getHorario() {}

	
	+static void scheduleMeasurements(final String nome, final String especialidade, final String horario, long delay) {}

}


interface Subject {
	+void registerObserver(Observer o);
	+void removeObserver(Observer o);
	+void notifyObservers();
	+void setMeasurements(String nome, String especialidade, String horario);
}

interface Observer {
	+void update(String nome, String especialidade, String horario);
}

class View implements ActionListener, Observer {
	-Subject model;
	-controllerInterface controller;
	-String nome = "0";
	-String especialidade = "0";
	-String horario = "0";
	
	JFrame frame;
	JPanel panelBotoes;
	JPanel panelDados;
	JPanel panelTemp;
	JPanel panelPres;
	JPanel panelHumi;
	JLabel labelTemp;
	JLabel labelPres;
	JLabel labelHumi;
	JLabel tempText;
	JLabel presText;
	JLabel humiText;
	JButton assinar;
	JButton cancelar;
	
	+View(Subject mo, controllerInterface co) {}
	
	
	+void createView(){}

	+void update(String name, String espe, String hor) {}

	+display() {}
	
	+void habilitarBotaoAssinar(){}
	
	+void desabilitarBotaoAssinar(){}
	
	
	+void habilitarBotaoCancelar(){}
	
	+void desabilitarBotaoCancelar(){}
	
	+void actionPerformed(ActionEvent event){}
}


Subject*-->Observer
View*-->controllerInterface
Model-->Model
controllerInterface-->Model
